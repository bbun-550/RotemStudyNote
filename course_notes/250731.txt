250731

발표(4기라 기대가 큼)

django

js 많이 쳐줌
- 클래스 어려움(양파임)
- js 기반 데이터분석도 있음(웹에서 돌릴 수 있음)

LLM
- RAG? LangChain?(js,py 지원)

oop object-oriented programming
object 왜?

추론통계 ; 가설, 검정 p value 정의
regression ; 모델 만들어짐
	linear regression
classification
clustering ; 군집 분석. 지도학습(문제집, 답을 줌). 문제만 있음 >> 패턴을 찾아서 답 도출

deep learning
	신경망
	**tensorflow(기업에서)**. torch(연구원) ; 무엇으로 배우나 상관없음
	이미지 관련 ; CNN ,YOLO
	자연어 ; RNN, Transformer(이해 필)
		겐
	LLM ; rag, langchain
		- 직접 모델 만들 수도 있고
		- 만들어진 모델을 튜닝
		- 그냥 써
	reinforce learning(중요) ; 프로젝트 진행중 언급

mariaDB linux 기본 모델
mongoDB ; sns db 구조형에 넣을 수 없을 때 사용(리눅스 하듑)
chroma ; 벡터 db. 코사인 유사도 사용

알고리즘 ; 공부

[알고리즘, 코테, 공모전](https://cafe.daum.net/flowlife/F6Jx/339)
자기가 제일 잘하는 분야 쪽으로 아웃풋을 내는 것
세미나, 공모전, 자격증(sqld)

글쓰는 능력
---

### 아나콘다 설치
- 아나콘다 안에서 가상환경 잡을 수 있게 `envs` 파일이 있음
	- Lib > site-packages 라이브러리 다 설치되어 있음(넘파이, ...)
	- python은 가상환경 만들어줘야함

- jupyter notebook ; 셀 단위로 실행 (쓰진 않을 거임, collab 쓸거임)
	- 쓰는 목적 : 부분 부분 실행하기 위함(GPU 권장)

[너무 중요한 사이트 | 캐글](https://www.kaggle.com/)
- 경연 있음. 기업의 가상 데이터를 올리고 분석함(100등안에 많이 들면 인증 있음)
- 실력(linear model)되면 참여 추천

`pip`을 써도 됨. 안되면 `conda install`

- extension : python, code runner, 

- ctrl+enter 코드 실행

---

코딩 방식 >> 룰 기반 방식

머신러닝 기반 방식
- 데이터를 주고 패턴을 찾도록 학습시켜서 모델을 만든다(모델만 잘 만드면 된다. 신경망을 만들어서 레이어를 몇개 줄거야? 레이어 안에는 노드 몇개?...)
	- keras로 더 쉽게 구조를 만들 수 있음
- 들어올 데이터를 잘 가공해주면 된다.
- 이후에는 데이터 보여주면  

- 간단한건 function
- 복잡한건 class *클래스에 대한 이해 필요*

#### EDA 란?
- Exploratory Data Analysis
- 2-3분 이야기 할 수 있을 정도
- [EDA 카페 링크](https://cafe.daum.net/flowlife/SBU0/54?svc=toprank)
- 단순한 데이터 요약에 그치지 않고, 데이터의 숨겨진 구조와 관계, 이상값, 패턴, 변수 간 상관성 등을 찾아내는 데 핵심적인 역할


회귀 분석으로 정량/정성 

가설검정, cluster, clasification, linear regression으로 분석

넘파이 ; c/c++ 기반이라 빠름
- 모든 데이터 배열 처리(파이썬은 배열 아님. 집합형 자료)

numpy
pandas
matplotlib
끝나면 가설검정

---
오후

수식에 대한 이해 없어도 method function을 지원해준다

#### 분산
- 분석, 통계는 분산이다
$$
var = \sum (x - \bar x)^2 / n
\sigma = \sqrt var 
$$
데이터가 평균에 몰려 있으면 표준편차 작음. 산포도가 작다
표준편차 커지면 데이터가 평균으로 멀리 떨어져 있다. 산포도가 크다

좋은 데이터란? 
- 표준편차가 크면 나중에 모델 만들 때 제 기능을 못할 수 있음
- 평균에 모인 데이터가 좋음.

우리가 핸들할 데이터는 샘플 데이터

디버그 기능?
- 알고리즘 흐름 보고 싶을 때 유용
- 벌레 붙은 사각형
- f5 다음 단계

자유도 ;
샘플 데이터를 나눌 때, n-1
- 파이썬은 모집단으로 처리함
- R은 샘플로 처리해서 n-1로 나눔

>[!danager] 기본 개념 숙지
>삼각함수 개념 중요.
>- cos에 대한 이해
>- tan
>미분
>- 접선의 기울기

#### numpy array와 python list 비교
[Why Python is Slow](https://cafe.daum.net/flowlife/RUrO/118?svc=toprank)
![[numpyvspythonlist.png]]
- python
	- list안에 값을 별도의 객체로 잡힌다. 하나의 인스턴스이다.
	- 각각의 인스턴스는 주소를 가지고 있다.
	- 주소를 가지고 있는 버퍼가 있다. (hash table)
	- 리스트는 순서대로 안 잡힌다. 
	- 해당 지점의 주소를 가지고 있고, 이를 items가 기억하고 있다.
	- 메모리를 많이 잡아 먹는다. 많은 양의 데이터가 아니라면 리스트 사용(빅데이터는 곤란)

- numpy array(like C array)
	- 주소는 하나. 각각 4byte 차지.
	- 별도 객체를 만들어지는 것이 아니라, 하나의 객체 안에 꼬리에 꼬리를 무는 형태로 저장이된다.
	- 그래서 인덱스로 위치 기억해서, 인덱스로 호출 가능
	- 데이터 처리 속도에서 유리
	- 단, 데이터 타입 일치해야함

---
예습
[python에 numpy, scipy, pandas, matplotlib 설치](https://cafe.daum.net/flowlife/SBU0/5?svc=toprank)


---
내일
내적 연산 inner product
- 벡터




