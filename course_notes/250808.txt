250808

>혼자 공부 데이터 모델링
>[](https://bommbom.tistory.com/entry/%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%AA%A8%EB%8D%B8%EB%A7%81-%EC%9E%98-%ED%95%98%EA%B8%B0-%EC%B2%AB-%EB%8B%A8%EC%B6%94-%EC%97%85%EB%AC%B4%EB%B6%84%EC%84%9D)

>실습파일
>[[python_selenium예제|plot05_3selenium.py]] : selenium 참고 파일
>[[plot06_bike.py]] : 워싱턴 공유 자전거 자료 실습
>[[plot07.py]]
>---
>데이터베이스에서 불러와서 데이터분석
>[[db01_sqlite.py]] : sqlite 데이터프레임 입력, 저장, 불러오기
>[[db02_remote.py]] : mariaDB에서 불러오기
>	- [[dbconfig.py]]

>수업 참고 자료
>![[boxplot.png]]
>[Boxplot 기준 이상치(outlier)의 정의](https://cafe.daum.net/flowlife/SBU0/5?svc=toprank)

---
## 리뷰
- 한페이지만 긁으면 스크랩핑
- 여러 페이지 긁어오면 웹 크롤링

- `figsize` 단위 인치

> 셀레니움을 사용해야 하는 이유
> - 동적으로 로딩되는 웹 페이지로, 일반적인 HTTP 요청으로는 HTML 소스를 가져올 수 없다.
> - 따라서, 셀레니움을 사용하여 실제 브라우저를 통해 페이지를 로드하고, 필요한 데이터를 추출해야 한다

> 0. 필요사항
>- 로컬에 Python 3.13.5 설치
>- Selenium 및 BeautifulSoup4, pandas, matplotlib, seaborn 설치
>- pip install selenium beautifulsoup4 pandas matplotlib seaborn
>- https://googlechromelabs.github.io/chrome-for-testing/>stable 에서 크롬 드라이버 다운로드 및 경로 설정
>- (터미널) 아나콘다 자동 활성화 비활성화 명령어: conda config --set auto_activate_base false

> 1. 크롬 드라이버 경로 지정 (chromedriver.exe 위치에 맞게 수정)
>chrome_path = "./01_big_data_machine_learning/code/0807/연습문제/chromedriver.exe"
>service = Service(chrome_path)
>options = webdriver.ChromeOptions()
>options.add_argument('--headless')  > 창 안 띄우고 실행

> 2. 웹 페이지 열기
>driver = webdriver.Chrome(service=service, options=options)
>driver.get("https://bongousse.com/Menu_list.asp")
>time.sleep(2)  > 페이지 로딩 대기

> 3. HTML 소스 가져오기
>html = driver.page_source

> 4. BeautifulSoup 객체 생성 후 soup에 저장
>soup = BeautifulSoup(html, "html.parser")

> 5. (로그) soup 파일의 내용을 log_downloaded_menu.html로 저장
> 로그 저장 활성화 여부
>SAVE_LOG = False  > False로 바꾸면 로그 저장 안 함
>if SAVE_LOG:
    with open("./01_big_data_machine_learning/code/0807/연습문제/log_downloaded_menu.html", "w", encoding="utf-8") as f:
        f.write(str(soup.prettify()))

> 6. 드라이버 종료
>driver.quit()

> 7. soup 객체에서 메뉴명과 가격 추출
>names = [tag.text.strip() for tag in soup.select('ul>bonmenu_list li div.txtbox > div.tit')]
>prices = [int(tag.text.strip().replace(',', '')) for tag in soup.select('ul>bonmenu_list li div.txtbox > div.price')]

---

sqld_d : 시험은 oracle
postgresql 

### DB 실행 명령어
- `mysql -u root -p12345` : p 뒤는 초기설정한 비밀번호

>root 계정 비밀번호 설정
>- `show databases;` > `use mysql;`
>- `select host, user, password from user;` : 생성된 유저 확인
>- `set password for 'root'@'localhost'=password('비밀번호')` : 비밀번호 설정
>- `flush privileges;` : 변경사항 적용
>- `select host, user, password from user; : 변경 내용 확인

- `select @@datadir;` : 데이터 디렉토리 위치 확인

- remote
	- anaconda prompt에서 모듈 설치 `pip install mysqlclient` (.whl 형식으로 압축함)




---

### 맥북 mariaDB 설치

- homebrew 업데이트
	- `brew update`

- MariaDB 설치
	- `brew install mariadb`
- 설치 확인
	- `mariadb -v`

>[!info] 참고
>애플 실리콘 맥(M1, M2)의 경우 기존 인텔 맥과 저장되는 위치가 다르므로 주의해야한다.
>m1, m2 와같은 애플 실리콘 맥인 경우 설치 경로가 「 /usr/local/ 」 이 아니고 「 /opt/homebrew/ 」 인 경우가 많아 주의해야한다.

- 실행
	- `mysql.server start`
	- `mariadb` 로 접속

- 루트 계정 설정
	- `select host, user, password from user;`


[데이터베이스 추가](https://github.com/pykwon/etc/blob/master/sample_table_MariaDbl.txt)













