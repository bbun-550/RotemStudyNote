250804

---
numpy
- ndarry class 중요

프로젝트 결과물 출력은 django

오케스타라 ; 각종 악기 연주의 조화로움
앞으로 오케스트라 지휘자가 되면 된다

AI ; 데이터분석(해당 분야 부품 학습)
---
pandas(입력한 데이터 가공) -> matplotlib(시각화, 그래프 ; 범용성 출력 django)

시험(데이터분석 : numpy, pandas, matlotlib) : 15문제(5점씩, 10점씩). 반항하지 않으면 60점 나옴. 빈칸 비워 놓으면 '나'에 대한 반항이다(관련 내용 아무거나 쓴다). 

## 저번주 과제 리뷰
pop ; 

- step3 : unifunc 관련문제
- 가중치 ; average
- percentile ; 4분위수. 전체 데이터를 N으로 쪼갤 수 있음 `np.percentile(변수, 비율)`
	- 데이터 분포 확인용
	- 이상치 확인용
	- 내부적으로 sort함 ; 랜덤하게 위치한 데이터를 sort
```
np.random.seed(1) # 랜덤 수 고정
aa = np.random.randn(4, 5)
print(f'~ 4행 5열 다차원 배열 ~\n{aa}\n')

print('~ 출력 결과 ~')
print(f'평균 : {np.mean(aa)}')
print(f'합계 : {np.sum(aa)}')
print(f'표준편차 : {np.std(aa)}')
print(f'분산 : {np.var(aa)}')
print(f'최댓값 : {np.max(aa)}')
print(f'최솟값 : {np.min(aa)}')
print(f'1사분위 수 : {np.percentile(aa, 25)}')

# percentile 내부적으로 sort한다
lowerdata = aa[aa <= np.percentile(aa, 25)]
print('lowerdata :', lowerdata) # [-1.07296862 -2.3015387  -2.06014071 -1.09989127 -0.87785842]
print('aa :', aa)
aa = np.sort(aa)
print(aa) # [[-1.07296862 -0.61175641 -0.52817175  0.86540763  1.62434536][..][..]]


print(f'2사분위 수 : {np.percentile(aa, 50)}')
print(f'3사분위 수 : {np.percentile(aa, 75)}')
print(f'요소값 누적합 : {np.cumsum(aa)}')
```
알고리즘 꽃, sort
	- 자료구조와 sort는 컴퓨터 공부의 필수

- flatten() ; 차원 축소. 통계학과 교수님 최애

- sum, mean...은 numpy 라이브러리

---

## log 사용하면..
- 데이터 편차가 큼 >> scaling한다(편차 줄인다)
- 치우친 데이터를 정규화할 수 있다

a^x = b >> x = log_{a}b
a를 몇 승한 값이 b?

밑이 2인 로그; 2진 로그
밑이 10인 로그; 상용로그
밑에 자연상수(e, pi ...) ;자연로그

- np.log
- np.exp : 로그 역변환



>[!question]
>경사하강법? 에서도 표준화한다.


---
pandas

[데이터 분석관련 로드맵, PPT](https://cafe.daum.net/flowlife/SBU0/21?svc=toprank)
- py분석1.pdf ... 내려받기
	- series : 행을 만든다 (1차원 배열로 봐도 무방)
		- 배열 값지만, series는 인덱스가 붙는다
	- dataframe : 여러 개 series 모여서 (2차원 배열로 봐도 무방)

- [data munging, wrangling](https://ko.wikipedia.org/wiki/%EB%8D%B0%EC%9D%B4%ED%84%B0_%EB%9E%AD%EA%B8%80%EB%A7%81)
	- 데이터를 정리하고 통합하는 과정을 pandas로 할 수 있음


---
오후 수업 알고리즘 기초

https://cafe.daum.net/flowlife/SBU0/21?svc=toprank

- 예시) 절대값 구하기
	1. 0 미만 곱하기 -1
	2. 제곱 후 루트
- 1 - 10까지 합 구하기
	1. 누적


- 최소의 메모리로 최상의 결과물 출력 목표
- 최선의 방법 도출




